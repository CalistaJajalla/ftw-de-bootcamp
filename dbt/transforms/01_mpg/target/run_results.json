{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.9", "generated_at": "2025-10-04T08:03:38.297036Z", "invocation_id": "e27e2702-cdb7-458b-89b8-e71c54a7b088", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-04T08:03:37.328928Z", "completed_at": "2025-10-04T08:03:37.346884Z"}, {"name": "execute", "started_at": "2025-10-04T08:03:37.347810Z", "completed_at": "2025-10-04T08:03:37.609289Z"}], "thread_id": "Thread-1", "execution_time": 0.2823164463043213, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.ex_01_mpg.mpg_standardized", "compiled": true, "compiled_code": "\n\n-- Source columns are already Nullable with correct types.\n-- Keep them as-is to preserve nullability and avoid insert errors.\n\nselect\n  toFloat64(mpg)          as mpg,\n  toInt32(cylinders)      as cylinders,\n  toFloat64(displacement) as displacement,\n  CAST(horsepower AS Nullable(Float64)) as horsepower,\n  toInt32(weight)         as weight,\n  toFloat64(acceleration) as acceleration,\n  toInt32(model_year)     as model_year,\n  trim(origin)                  as origin,\n  trim(name)                    as make\nfrom `raw`.`autompg___cars`\n-- where horsepower is not null\n  -- and isFinite(horsepower)", "relation_name": "`clean`.`mpg_standardized`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-04T08:03:37.662774Z", "completed_at": "2025-10-04T08:03:37.722375Z"}, {"name": "execute", "started_at": "2025-10-04T08:03:37.731843Z", "completed_at": "2025-10-04T08:03:37.780316Z"}], "thread_id": "Thread-1", "execution_time": 0.1524972915649414, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_mpg.not_null_mpg_standardized_cylinders.b01f130acc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cylinders\nfrom `clean`.`mpg_standardized`\nwhere cylinders is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-04T08:03:37.811715Z", "completed_at": "2025-10-04T08:03:37.828561Z"}, {"name": "execute", "started_at": "2025-10-04T08:03:37.829626Z", "completed_at": "2025-10-04T08:03:37.845348Z"}], "thread_id": "Thread-1", "execution_time": 0.0413663387298584, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_mpg.not_null_mpg_standardized_displacement.68b13a28b0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect displacement\nfrom `clean`.`mpg_standardized`\nwhere displacement is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-04T08:03:37.630049Z", "completed_at": "2025-10-04T08:03:37.667895Z"}, {"name": "execute", "started_at": "2025-10-04T08:03:37.676385Z", "completed_at": "2025-10-04T08:03:37.900333Z"}], "thread_id": "Thread-3", "execution_time": 0.27876830101013184, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_mpg.accepted_values_mpg_standardized_cylinders__3__4__5__6__8.e4e8ce25ed", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        cylinders as value_field,\n        count(*) as n_records\n\n    from `clean`.`mpg_standardized`\n    group by cylinders\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '3','4','5','6','8'\n)\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-04T08:03:37.646768Z", "completed_at": "2025-10-04T08:03:37.692849Z"}, {"name": "execute", "started_at": "2025-10-04T08:03:37.723783Z", "completed_at": "2025-10-04T08:03:37.909189Z"}], "thread_id": "Thread-2", "execution_time": 0.28221821784973145, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_mpg.not_null_mpg_standardized_acceleration.9ff1644aae", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect acceleration\nfrom `clean`.`mpg_standardized`\nwhere acceleration is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-04T08:03:37.857558Z", "completed_at": "2025-10-04T08:03:37.870483Z"}, {"name": "execute", "started_at": "2025-10-04T08:03:37.873383Z", "completed_at": "2025-10-04T08:03:37.912512Z"}], "thread_id": "Thread-1", "execution_time": 0.05852675437927246, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_mpg.not_null_mpg_standardized_model_year.ca032ab904", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect model_year\nfrom `clean`.`mpg_standardized`\nwhere model_year is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-04T08:03:37.639507Z", "completed_at": "2025-10-04T08:03:37.686663Z"}, {"name": "execute", "started_at": "2025-10-04T08:03:37.712088Z", "completed_at": "2025-10-04T08:03:37.916789Z"}], "thread_id": "Thread-4", "execution_time": 0.29180192947387695, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_mpg.accepted_values_mpg_standardized_origin__usa__europe__japan.59743c9a2d", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        origin as value_field,\n        count(*) as n_records\n\n    from `clean`.`mpg_standardized`\n    group by origin\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'usa','europe','japan'\n)\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-04T08:03:37.930956Z", "completed_at": "2025-10-04T08:03:37.952534Z"}, {"name": "execute", "started_at": "2025-10-04T08:03:37.955851Z", "completed_at": "2025-10-04T08:03:37.985841Z"}], "thread_id": "Thread-3", "execution_time": 0.06048393249511719, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_mpg.not_null_mpg_standardized_mpg.3592ad3231", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect mpg\nfrom `clean`.`mpg_standardized`\nwhere mpg is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-04T08:03:37.940269Z", "completed_at": "2025-10-04T08:03:37.962488Z"}, {"name": "execute", "started_at": "2025-10-04T08:03:37.963447Z", "completed_at": "2025-10-04T08:03:37.994055Z"}], "thread_id": "Thread-2", "execution_time": 0.06491565704345703, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_mpg.not_null_mpg_standardized_origin.b3c0df5b4a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect origin\nfrom `clean`.`mpg_standardized`\nwhere origin is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-04T08:03:37.947488Z", "completed_at": "2025-10-04T08:03:37.967717Z"}, {"name": "execute", "started_at": "2025-10-04T08:03:37.970014Z", "completed_at": "2025-10-04T08:03:37.997456Z"}], "thread_id": "Thread-1", "execution_time": 0.06748366355895996, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_mpg.not_null_mpg_standardized_weight.5050df3d05", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect weight\nfrom `clean`.`mpg_standardized`\nwhere weight is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-04T08:03:38.017473Z", "completed_at": "2025-10-04T08:03:38.042303Z"}, {"name": "execute", "started_at": "2025-10-04T08:03:38.043141Z", "completed_at": "2025-10-04T08:03:38.196243Z"}], "thread_id": "Thread-4", "execution_time": 0.1857297420501709, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.ex_01_mpg.cylinders_by_origin", "compiled": true, "compiled_code": "\n\nselect\n  origin,\n  avg(cylinders) as avg_cylinders,\n  count()        as n\nfrom `clean`.`mpg_standardized`\ngroup by origin", "relation_name": "`mart`.`cylinders_by_origin`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-04T08:03:38.023910Z", "completed_at": "2025-10-04T08:03:38.104901Z"}, {"name": "execute", "started_at": "2025-10-04T08:03:38.108456Z", "completed_at": "2025-10-04T08:03:38.205107Z"}], "thread_id": "Thread-3", "execution_time": 0.19327831268310547, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.ex_01_mpg.dq_mpg_anomalies", "compiled": true, "compiled_code": "\n\n-- Row-level drilldown of \u201cobviously wrong\u201d records based on simple rules.\n-- LIMIT for demo-friendliness; remove in real pipelines.\n\nwith cln as (\n  select * from `clean`.`mpg_standardized`\n),\nviolations as (\n  select\n    -- NOTE: this dataset has no native PK; include a synthetic row_number if needed.\n    -- ClickHouse: use monotonicallyIncreasingId() isn't stable; we\u2019ll show columns directly.\n    mpg, cylinders, displacement, horsepower, weight, acceleration, model_year, origin, make,\n\n    multiIf(\n      mpg <= 0,                      'nonpositive_mpg',\n      displacement <= 0,             'nonpositive_displacement',\n      weight <= 0,                   'nonpositive_weight',\n      acceleration <= 0,             'nonpositive_acceleration',\n      cylinders not in (3,4,5,6,8),  'invalid_cylinders',\n      lower(origin) not in ('usa','europe','japan'), 'invalid_origin',\n      model_year < 70 or model_year > 82, 'out_of_range_model_year',\n      horsepower is null,            'null_horsepower',\n      'ok'\n    ) as dq_issue\n  from cln\n)\nselect *\nfrom violations\nwhere dq_issue != 'ok'\nlimit 50", "relation_name": "`mart`.`dq_mpg_anomalies`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-04T08:03:38.029805Z", "completed_at": "2025-10-04T08:03:38.088159Z"}, {"name": "execute", "started_at": "2025-10-04T08:03:38.096775Z", "completed_at": "2025-10-04T08:03:38.248565Z"}], "thread_id": "Thread-2", "execution_time": 0.2356104850769043, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.ex_01_mpg.dq_mpg_summary", "compiled": true, "compiled_code": "\n\n-- Inputs:\n--   raw table:   raw.autompg___cars           (as loaded by dlt)\n--   clean model: `clean`.`mpg_standardized` (typed/trimmed)\n\nwith src as (\n  select * from `raw`.`autompg___cars`\n),\ncln as (\n  select * from `clean`.`mpg_standardized`\n),\n\ncounts as (\n  select\n    (select count() from src)  as row_count_raw,\n    (select count() from cln)  as row_count_clean\n),\nnulls as (\n  select\n    round(100.0 * countIf(horsepower is null) / nullif(count(),0), 2) as pct_null_horsepower\n  from cln\n),\ndomains as (\n  select\n    -- cylinders domain: {3,4,5,6,8}\n    countIf(cylinders not in (3,4,5,6,8)) as invalid_cylinders,\n    -- origin domain: {\"usa\",\"europe\",\"japan\"} (case-insensitive trim assumed in clean)\n    countIf(lower(origin) not in ('usa','europe','japan')) as invalid_origin\n  from cln\n),\nbounds as (\n  select\n    countIf(mpg <= 0)           as nonpositive_mpg,\n    countIf(displacement <= 0)  as nonpositive_displacement,\n    countIf(weight <= 0)        as nonpositive_weight,\n    countIf(acceleration <= 0)  as nonpositive_acceleration,\n    -- UCI Auto MPG years are 70..82 (1970..1982) in this dataset\n    countIf(model_year < 70 or model_year > 82) as out_of_range_model_year\n  from cln\n),\njoined as (\n  select\n    counts.row_count_raw,\n    counts.row_count_clean,\n    (counts.row_count_raw - counts.row_count_clean) as dropped_rows,\n\n    nulls.pct_null_horsepower,\n\n    domains.invalid_cylinders,\n    domains.invalid_origin,\n\n    bounds.nonpositive_mpg,\n    bounds.nonpositive_displacement,\n    bounds.nonpositive_weight,\n    bounds.nonpositive_acceleration,\n    bounds.out_of_range_model_year\n  from counts\n  cross join nulls\n  cross join domains\n  cross join bounds\n)\n\nselect * from joined", "relation_name": "`mart`.`dq_mpg_summary`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-04T08:03:38.235310Z", "completed_at": "2025-10-04T08:03:38.257376Z"}, {"name": "execute", "started_at": "2025-10-04T08:03:38.259967Z", "completed_at": "2025-10-04T08:03:38.280011Z"}], "thread_id": "Thread-4", "execution_time": 0.06331777572631836, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_mpg.not_null_cylinders_by_origin_origin.9a9d6e89e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect origin\nfrom `mart`.`cylinders_by_origin`\nwhere origin is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-10-04T08:03:38.220093Z", "completed_at": "2025-10-04T08:03:38.249842Z"}, {"name": "execute", "started_at": "2025-10-04T08:03:38.252865Z", "completed_at": "2025-10-04T08:03:38.282970Z"}], "thread_id": "Thread-1", "execution_time": 0.06759786605834961, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_01_mpg.accepted_values_cylinders_by_origin_origin__usa__europe__japan.61e009b3f2", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        origin as value_field,\n        count(*) as n_records\n\n    from `mart`.`cylinders_by_origin`\n    group by origin\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'usa','europe','japan'\n)\n\n\n", "relation_name": null}], "elapsed_time": 1.446295976638794, "args": {"populate_cache": true, "vars": {}, "favor_state": false, "resource_types": [], "partial_parse_file_diff": true, "select": [], "partial_parse": true, "exclude_resource_types": [], "log_level_file": "debug", "source_freshness_run_project_hooks": false, "target": "local", "write_json": true, "warn_error_options": {"include": [], "exclude": []}, "require_resource_names_without_spaces": false, "version_check": true, "show_resource_report": false, "use_colors_file": true, "log_path": "/workdir/transforms/01_mpg/logs", "export_saved_queries": false, "log_level": "info", "macro_debugging": false, "use_colors": true, "empty": false, "log_format": "default", "static_parser": true, "project_dir": "/workdir/transforms/01_mpg", "quiet": false, "show": false, "send_anonymous_usage_stats": true, "cache_selected_only": false, "indirect_selection": "eager", "log_file_max_bytes": 10485760, "print": true, "strict_mode": false, "which": "build", "introspect": true, "profiles_dir": ".", "require_explicit_package_overrides_for_builtin_materializations": true, "log_format_file": "debug", "enable_legacy_logger": false, "printer_width": 80, "invocation_command": "dbt build --profiles-dir . --target local", "include_saved_query": false, "defer": false, "exclude": []}}