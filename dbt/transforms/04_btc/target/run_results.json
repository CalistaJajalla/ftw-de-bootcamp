{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.9", "generated_at": "2025-08-27T11:04:22.679681Z", "invocation_id": "4f63e7af-7ff6-449a-a3f7-f8e7b1b8ff20", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-27T11:04:20.170774Z", "completed_at": "2025-08-27T11:04:20.187953Z"}, {"name": "execute", "started_at": "2025-08-27T11:04:20.188733Z", "completed_at": "2025-08-27T11:04:20.687263Z"}], "thread_id": "Thread-1", "execution_time": 0.5184435844421387, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.ex_03_meteo.stg_btc__market_price", "compiled": true, "compiled_code": "-- models/clean/stg_btc__market_price.sql\n\n\nselect\n  cast(id as String)                       as coin_id,\n  cast(symbol as String)                   as symbol,\n  cast(name as String)                     as name,\n  cast(image as String)                    as image_url,\n  toFloat64(current_price)                 as price_usd,\n  toFloat64(market_cap)                    as market_cap_usd,\n  toInt32(market_cap_rank)                 as market_cap_rank,\n  toFloat64(total_volume)                  as total_volume_usd,\n  toFloat64(high_24h)                      as high_24h_usd,\n  toFloat64(low_24h)                       as low_24h_usd,\n  toFloat64(price_change_24h)              as price_change_24h_usd,\n  toFloat64(price_change_percentage_24h)   as price_change_pct_24h,\n\n  -- Normalize last_updated to DateTime64(6,'UTC') whether it's already DT or a String\n  ifNull(\n    parseDateTime64BestEffortOrNull(toString(last_updated), 6, 'UTC'),\n    toDateTime64(last_updated, 6, 'UTC')\n  )                                        as last_updated_utc,\n\n  toTimeZone(\n    ifNull(\n      parseDateTime64BestEffortOrNull(toString(last_updated), 6, 'UTC'),\n      toDateTime64(last_updated, 6, 'UTC')\n    ),\n    'Asia/Manila'\n  )                                        as last_updated_manila\n\nfrom `raw`.`btc___market_price`", "relation_name": "`clean`.`stg_btc__market_price`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-27T11:04:20.783471Z", "completed_at": "2025-08-27T11:04:20.855550Z"}, {"name": "execute", "started_at": "2025-08-27T11:04:20.882093Z", "completed_at": "2025-08-27T11:04:21.149253Z"}], "thread_id": "Thread-2", "execution_time": 0.40026426315307617, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_03_meteo.not_null_stg_btc__market_price_price_usd.639627ceb6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price_usd\nfrom `clean`.`stg_btc__market_price`\nwhere price_usd is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-27T11:04:20.750398Z", "completed_at": "2025-08-27T11:04:20.791276Z"}, {"name": "execute", "started_at": "2025-08-27T11:04:20.844296Z", "completed_at": "2025-08-27T11:04:21.166435Z"}], "thread_id": "Thread-3", "execution_time": 0.4224891662597656, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_03_meteo.not_null_stg_btc__market_price_coin_id.022fc4d0c1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect coin_id\nfrom `clean`.`stg_btc__market_price`\nwhere coin_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-27T11:04:20.775830Z", "completed_at": "2025-08-27T11:04:20.849332Z"}, {"name": "execute", "started_at": "2025-08-27T11:04:20.856429Z", "completed_at": "2025-08-27T11:04:21.172920Z"}], "thread_id": "Thread-4", "execution_time": 0.4248354434967041, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.ex_03_meteo.not_null_stg_btc__market_price_last_updated_utc.d63cb9517a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_updated_utc\nfrom `clean`.`stg_btc__market_price`\nwhere last_updated_utc is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-27T11:04:21.268654Z", "completed_at": "2025-08-27T11:04:21.277733Z"}, {"name": "execute", "started_at": "2025-08-27T11:04:21.379832Z", "completed_at": "2025-08-27T11:04:22.265161Z"}], "thread_id": "Thread-3", "execution_time": 1.079263687133789, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.ex_03_meteo.vw_btc__latest_24h", "compiled": true, "compiled_code": "\n\nWITH (SELECT max(last_updated_utc) FROM `clean`.`stg_btc__market_price`) AS ts_max\nSELECT\n  *\nFROM `clean`.`stg_btc__market_price`\nWHERE last_updated_utc >= ts_max - INTERVAL 24 HOUR\nORDER BY last_updated_utc", "relation_name": "`mart`.`vw_btc__latest_24h`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-27T11:04:21.260229Z", "completed_at": "2025-08-27T11:04:21.276979Z"}, {"name": "execute", "started_at": "2025-08-27T11:04:21.344028Z", "completed_at": "2025-08-27T11:04:22.584478Z"}], "thread_id": "Thread-2", "execution_time": 1.4006214141845703, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.ex_03_meteo.mart_btc__market_price_hourly", "compiled": true, "compiled_code": "\n\nwith base as (\n  select\n    -- non-nullable for MergeTree keys\n    toStartOfHour(toTimeZone(assumeNotNull(last_updated_utc), 'Asia/Manila')) as hour_local,\n    assumeNotNull(coin_id)                                                    as coin_id,\n    last_updated_utc,\n    toFloat64(price_usd)                                                      as price_usd\n  from `clean`.`stg_btc__market_price`\n  where last_updated_utc is not null\n\n  \n    -- Recompute only latest (and previous) Manila hours\n    and toStartOfHour(toTimeZone(last_updated_utc,'Asia/Manila')) >= (\n      select coalesce(max(hour_local), toStartOfHour(now('Asia/Manila')) - interval 1 hour)\n      from `mart`.`mart_btc__market_price_hourly`\n    ) - interval 1 hour\n  \n)\nselect\n  hour_local,\n  coin_id,\n  min(price_usd)                      as low_usd,\n  max(price_usd)                      as high_usd,\n  argMin(price_usd, last_updated_utc) as open_usd,   -- first in hour\n  argMax(price_usd, last_updated_utc) as close_usd   -- last in hour\nfrom base\ngroup by hour_local, coin_id\norder by hour_local, coin_id", "relation_name": "`mart`.`mart_btc__market_price_hourly`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-27T11:04:21.187872Z", "completed_at": "2025-08-27T11:04:21.275953Z"}, {"name": "execute", "started_at": "2025-08-27T11:04:21.278445Z", "completed_at": "2025-08-27T11:04:22.647930Z"}], "thread_id": "Thread-1", "execution_time": 1.4659295082092285, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.ex_03_meteo.mart_btc__daily_ohlc", "compiled": true, "compiled_code": "\n\nwith base as (\n  select\n    assumeNotNull(toDate(toTimeZone(last_updated_utc,'Asia/Manila'))) as day_local,\n    assumeNotNull(coin_id)                                            as coin_id,\n    last_updated_utc,\n    toFloat64(price_usd)                                              as price_usd\n  from `clean`.`stg_btc__market_price`\n  where last_updated_utc is not null\n\n  \n    -- Recompute only latest (and previous) Manila days\n    and toDate(toTimeZone(last_updated_utc,'Asia/Manila')) >= (\n      select coalesce(max(day_local), toDate(now('Asia/Manila')) - 1)\n      from `mart`.`mart_btc__daily_ohlc`\n    ) - 1\n  \n)\nselect\n  day_local,\n  coin_id,\n  min(price_usd)                      as low_usd,\n  max(price_usd)                      as high_usd,\n  argMin(price_usd, last_updated_utc) as open_usd,   -- first in day\n  argMax(price_usd, last_updated_utc) as close_usd   -- last in day\nfrom base\ngroup by day_local, coin_id\norder by day_local, coin_id", "relation_name": "`mart`.`mart_btc__daily_ohlc`"}], "elapsed_time": 3.3078410625457764, "args": {"require_resource_names_without_spaces": false, "use_colors": true, "profiles_dir": ".", "strict_mode": false, "log_format_file": "debug", "static_parser": true, "partial_parse_file_diff": true, "printer_width": 80, "version_check": true, "vars": {}, "target": "local", "show_resource_report": false, "show": false, "quiet": false, "exclude_resource_types": [], "log_file_max_bytes": 10485760, "send_anonymous_usage_stats": true, "use_colors_file": true, "macro_debugging": false, "resource_types": [], "require_explicit_package_overrides_for_builtin_materializations": true, "enable_legacy_logger": false, "warn_error_options": {"include": [], "exclude": []}, "write_json": true, "populate_cache": true, "partial_parse": true, "cache_selected_only": false, "indirect_selection": "eager", "defer": false, "log_level_file": "debug", "favor_state": false, "print": true, "log_format": "default", "invocation_command": "dbt build --profiles-dir . --target local", "project_dir": "/workdir/transforms/04_btc", "export_saved_queries": false, "empty": false, "log_level": "info", "select": [], "introspect": true, "source_freshness_run_project_hooks": false, "which": "build", "include_saved_query": false, "log_path": "/workdir/transforms/04_btc/logs", "exclude": []}}